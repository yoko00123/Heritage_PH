{"_id":"jaBeBzsQCirpTop2","shortid":"SyXICUErX","recipe":"phantom-pdf","engine":"handlebars","modificationDate":"2018-08-14T12:11:36.756Z","data":{"shortid":"BJ_AtmgLQ"},"phantom":{"margin":"0.5","headerHeight":"5.1cm","footerHeight":"3.5cm","orientation":"landscape","format":"Tabloid","footer":"{{!--<div style='display: none' id='last'>--}}\n{{!--    <table style=\"border-collapse:collapse; width: 100%;\">--}}\n{{!--               <tfoot>--}}\n{{!--                <tr style=\"font-family:Verdana; font-size:10pt;\">--}}\n{{!--                    <td center>{{single ParameterFields \"PreparedBy\"}}</td>--}}\n{{!--                    <td colspan = \"3\"></td>--}}\n{{!--                    <td center>{{single ParameterFields \"CheckedBy\"}}</td>--}}\n{{!--                    <td colspan = \"3\"></td>--}}\n{{!--                    <td center>{{single ParameterFields \"ApprovedBy\"}}</td>--}}\n{{!--                </tr>--}}\n{{!--                <tr style=\"font-family:Verdana; font-size:10pt;\">--}}\n{{!--                    <th></th>--}}\n{{!--                    <th style=\"border-top:1px solid black; font-weight:normal; font-color:black;\" colspan = \"1\" center>Prepared by</th>--}}\n{{!--                    <td colspan = \"3\" ></td>--}}\n{{!--                    <th style=\"border-top:1px solid black; font-weight:normal;\" colspan = \"1\" center>Checked by</th>--}}\n{{!--                    <td colspan = \"3\"></td>--}}\n{{!--                    <th style=\"border-top:1px solid black; font-weight:normal;\" colspan = \"1\" center>Approved by</th>--}}\n{{!--               </tr>--}}\n{{!--            </tfoot>--}}\n{{!--        </table>--}}\n{{!--</div>--}}\n\n{{!--<script>--}}\n{{!--    if ({#pageNum} == {#numPages}) {--}}\n{{!--        document.getElementById('last').style.display='block'--}}\n{{!--    } else {--}}\n{{!--        document.getElementById('last').style.display='none'--}}\n{{!--    }--}}\n{{!--</script>--}}\n{{!--<br><br>--}}\n{{!--<div style=\"float:left;  font-size:8pt; font-family:Verdana;\"> Print Date: {{formatDate Date 'mmm dd, yyyy'}}<br>--}}\n{{!-- Print Time: {{formatDate Time 'h:MM TT'}}  </div>--}}\n{{!--  <div style=\"float:right; font-size:8pt; font-family:Verdana;\">{#pageNum}/{#numPages}</div >--}}\n ","header":"<style>\n    table {\n        width: 100%;\n        /*border-collapse: collapse;*/\n    }\n\n    /*thead > tr > th,  [border-bottom] {*/\n\n    /*    border-bottom: 1px solid black;*/\n\n    /*    padding-bottom:5px;*/\n\n    /*}*/\n\n    /*tfoot > tr > th, [border-top]{*/\n\n    /*    border-top: 1px  solid black;*/\n\n    /*    padding-top: 5px;*/\n\n    /*}*/\n\n    p {\n        font-size: 25;\n    }\n\n    [center] {\n        text-align: center;\n    }\n\n    [bold] {\n        font-weight: bold;\n    }\n\n    [padding-20] {\n        padding-left: 20px;\n    }\n\n    [total] {\n        font-weight: bold;\n        font-size: 25px;\n    }\n\n    [bot-border] {\n        border-bottom: 1px solid black;\n    }\n    [top-border] {\n        border-top: 1px solid black;\n    }\n    [left-border] {\n        border-left: 1px solid black;\n    }\n    [right-border] {\n        border-right: 1px solid black;\n    }\n\n    [padding-bot] {\n        padding-bottom: 10px;\n    }\n\n    [top-margin] {\n        margin-top: 35px;\n    }\n\n    /*thead { display: table-row-group } */\n</style>\n<center>\n<table border = \"0\">\n    <thead style=\"font-family: Verdana;\">\n        <tr>\n         <th style=\"border-style:none; text-align:center; color:black; font-size:14pt;\">{{single DataSource \"Company\"}} </th>\n        </tr>\n        <tr>\n        <th style=\"border-style:none; text-align:center; color:black; font-size:12pt;\">Daily Schedule Report</th></tr>\n    <tr>\n        <th  style=\"border-style:none; text-align:center; color:black; font-size:12pt;\">{{singleDate DataSource \"StartDate\" \"mmm dd, yyyy\"}} - {{singleDate DataSource \"EndDate\" \"mmm dd, yyyy\"}}</th>\n    </tr>\n     </thead>\n</table></center>\n<br><br><br>\n<table>\n    <thead style=\"font:10pt Verdana;\" bot-border>\n        {{!--<tr>--}}\n            {{!--<th bot-border padding-bot style=\"text-align:left;\" width=\"10%\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th  left-border right-border top-border colspan=4 padding-bot style=\"text-align:center;\">Employer Share</th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--    <th padding-bot style=\"text-align:left;\"></th>--}}\n        {{!--</tr>--}}\n        <tr>\n            {{!--<th bot-border padding-bot style=\"text-align:left;\" width=\"10%\"></th>--}}\n            <th  padding-bot style=\"text-align:center;\">Employee ID</th>\n            <th  padding-bot style=\"text-align:center;\">Employee Name</th>\n            <th  padding-bot style=\"text-align:center;\">Company</th>\n            <th  padding-bot style=\"text-align:center;\">Branch</th>\n            <th  padding-bot style=\"text-align:center;\">Cost Center</th>\n            <th  padding-bot style=\"text-align:center;\">Daily Rate</th>\n            <th  padding-bot style=\"text-align:center;\">COLA Rate</th>\n            <th  padding-bot style=\"text-align:center;\">Basic</th>\n            <th  padding-bot style=\"text-align:center;\">AUT</th>\n            <th  padding-bot style=\"text-align:center;\">Net Basic</th>\n            <th  padding-bot style=\"text-align:center;\">COLA</th>\n            <th  padding-bot style=\"text-align:center;\">OT</th>\n            <th  padding-bot style=\"text-align:center;\">NDiff</th>\n            <th  padding-bot style=\"text-align:center;\">Holiday</th>\n            <th  padding-bot style=\"text-align:center;\">Other Earning</th>\n            <th  padding-bot style=\"text-align:center;\">Allowances</th>\n            <th  padding-bot style=\"text-align:center;\">SPCL Leaves</th>\n            <th  padding-bot style=\"text-align:center;\">13th Month</th>\n            <th  padding-bot style=\"text-align:center;\">SIL</th>\n            <th  padding-bot style=\"text-align:center;\">SSS</th>\n            <th  padding-bot style=\"text-align:center;\">ECC</th>\n            <th  padding-bot style=\"text-align:center;\">PHIC</th>\n            <th  padding-bot style=\"text-align:center;\">HDMF</th>\n            <th  padding-bot style=\"text-align:center;\">Gross Amount</th>\n            <th  padding-bot style=\"text-align:center;\">Other Deduction</th>\n            <th  padding-bot style=\"text-align:center;\">Mark Up</th>\n            <th  padding-bot style=\"text-align:center;\">Net Amount</th>\n        </tr>\n        \n    </thead>\n    <tbody style=\"visibility:hidden; font-family:Verdana; font-size:10pt\">\n       {{#group DataSource by = \"$.Branch\" order=\"$.EmployeeID\"}}\n        <tr>\n            <td colspan=20 style=\"font-weight:bold;\">{{Key}}</td>\n        </tr>\n        <tr>\n            <td></td>\n        </tr>\n        {{#each source}}\n        <tr>\n    <td style=\"text-align:right;\">{{EmployeeCode}}</td>\n            <td style=\"text-align:center;\">{{EmployeeName}}</td>\n            <td style=\"text-align:center;\">{{Company}}</td>\n            <td style=\"text-align:center;\">{{Branch}}</td>\n            <td style=\"text-align:center;\">{{CostCenter}}</td>\n            <td style=\"text-align:center;\">{{DailyRate}}</td>\n            <TD style=\"text-align:center;\">{{COLARate}}</TD>\n            <td style=\"text-align:center;\">{{CheckZero 00 Basic}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 01 AUT}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 02 NetBasic}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 03 COLA}}</td>    \n            <td style=\"text-align:center;\">{{CheckZero 04 OT}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 05 NDiff}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 06 Holiday}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 07 OtherEarning}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 08 Allowances}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 09 SPCLLeaves}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 10 Thirteenth}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 11 SIL}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 12 SSSER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 13 ECC}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 14 PHICER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 15 HDMFER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 16 GrossAmount}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 17 OtherDeduction}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 18 MarkUp}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 19 NetAnount}}</td>\n        </tr>\n        {{/each}} \n        <tr>\n         <td style=\"text-align:right; font-weight:bold;\">Subtotal Per:</td>\n            <td style=\"text-align:center;\"></td>\n            <td style=\"text-align:center;\"></td>\n            <td style=\"text-align:center;\"></td>\n            <td style=\"text-align:center;\"></td>\n            <td style=\"text-align:center;\"></td>\n            <TD style=\"text-align:center;\"></TD>\n            <td style=\"text-align:center;\">{{GetTotal 00 Basic}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 01 AUT}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 02 NetBasic}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 03 COLA}}</td>    \n            <td style=\"text-align:center;\">{{GetTotal 04 OT}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 05 NDiff}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 06 Holiday}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 07 OtherEarning}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 08 Allowances}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 09 SPCLLeaves}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 10 Thirteenth}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 11 SIL}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 12 SSSER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 13 ECC}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 14 PHICER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 15 HDMFER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 16 GrossAmount}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 17 OtherDeduction}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 18 MarkUp}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 19 NetAnount}}</td>\n        </tr>\n              {{resetValue}}\n        {{/group}} {{!--{{/group}}--}}\n    </tbody>\n</table>","fitToPage":false},"name":"BillingHistory","content":"<style>\n    table {\n        width: 100%;\n        /*border-collapse: collapse;*/\n    }\n\n    /*thead > tr > th,  [border-bottom] {*/\n\n    /*    border-bottom: 1px solid black;*/\n\n    /*    padding-bottom:5px;*/\n\n    /*}*/\n\n    /*tfoot > tr > th, [border-top]{*/\n\n    /*    border-top: 1px  solid black;*/\n\n    /*    padding-top: 5px;*/\n\n    /*}*/\n\n    p {\n        font-size: 25;\n    }\n\n    [center] {\n        text-align: center;\n    }\n\n    [bold] {\n        font-weight: bold;\n    }\n\n    [padding-20] {\n        padding-left: 20px;\n    }\n\n    [total] {\n        font-weight: bold;\n        font-size: 25px;\n    }\n\n    [bot-border] {\n        border-bottom: 1px solid black;\n    }\n\n    [padding-bot] {\n        padding-bottom: 10px;\n    }\n\n    [top-margin] {\n        margin-top: 35px;\n    }\n\n    /*thead { display: table-row-group } */\n</style>\n<table>\n    <thead style=\"font:10pt Verdana;\">\n        <tr>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Employee ID</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Employee Name</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Company</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Branch</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Cost Center</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Daily Rate</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">COLA Rate</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Basic</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">AUT</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Net Basic</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">COLA</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">OT</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">NDiff</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Holiday</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Other Earning</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Allowances</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">SPCL Leaves</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">13th Month</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">SIL</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">SSS</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">ECC</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">PHIC</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">HDMF</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Gross Amount</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Other Deduction</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Mark Up</th>\n            <th style=\"opacity: 0; border: 0 none; height: 0;  margin: 0; padding: 0; border: 0 none; height: 0px;\">Net Amount</th>\n        </tr>\n    </thead>\n    <tbody style=\"font-family:Verdana; font-size:10pt\">\n        {{#group DataSource by = \"$.Branch\" order=\"$.EmployeeID\"}}\n        <tr>\n            <td colspan=20 style=\"font-weight:bold;\">{{Key}}</td>\n        </tr>\n        <tr>\n            <td></td>\n        </tr>\n        {{#each source}}\n        <tr>\n    <td style=\"text-align:right;\">{{EmployeeCode}}</td>\n            <td style=\"text-align:center;\">{{EmployeeName}}</td>\n            <td style=\"text-align:center;\">{{Company}}</td>\n            <td style=\"text-align:center;\">{{Branch}}</td>\n            <td style=\"text-align:center;\">{{CostCenter}}</td>\n            <td style=\"text-align:center;\">{{DailyRate}}</td>\n            <TD style=\"text-align:center;\">{{COLARate}}</TD>\n            <td style=\"text-align:center;\">{{CheckZero 00 Basic}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 01 AUT}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 02 NetBasic}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 03 COLA}}</td>    \n            <td style=\"text-align:center;\">{{CheckZero 04 OT}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 05 NDiff}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 06 Holiday}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 07 OtherEarning}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 08 Allowances}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 09 SPCLLeaves}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 10 Thirteenth}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 11 SIL}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 12 SSSER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 13 ECC}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 14 PHICER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 15 HDMFER}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 16 GrossAmount}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 17 OtherDeduction}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 18 MarkUp}}</td>\n            <td style=\"text-align:center;\">{{CheckZero 19 NetAnount}}</td>\n        </tr>\n        {{/each}} \n        <tr>\n         <td style=\"text-align:right; font-weight:bold;\">Subtotal Per:</td>\n            <td style=\"text-align:left;\"></td>\n            <td style=\"text-align:left;\"></td>\n            <td style=\"text-align:left;\"></td>\n            <td style=\"text-align:left;\"></td>\n            <td style=\"text-align:left;\"></td>\n            <TD style=\"text-align:left;\"></TD>\n            <td style=\"text-align:center;\">{{GetTotal 00 Basic}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 01 AUT}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 02 NetBasic}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 03 COLA}}</td>    \n            <td style=\"text-align:center;\">{{GetTotal 04 OT}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 05 NDiff}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 06 Holiday}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 07 OtherEarning}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 08 Allowances}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 09 SPCLLeaves}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 10 Thirteenth}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 11 SIL}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 12 SSSER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 13 ECC}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 14 PHICER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 15 HDMFER}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 16 GrossAmount}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 17 OtherDeduction}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 18 MarkUp}}</td>\n            <td style=\"text-align:center;\">{{GetTotal 19 NetAnount}}</td>\n        </tr>\n              {{resetValue}}\n        {{/group}} {{!--{{/group}}--}}\n    </tbody>\n</table>","helpers":"//Set number of computed columns\r\nvar _count = 19; // 2 = how many columns will have to add\r\nvar _total = new Array(10);\r\nvar _grandtotal = new Array(10);\r\n\r\nfunction resetValue(){\r\nfor(var i = 0; i < _count; i++){\r\n    _total[i] = 0.00;    \r\n}\r\n}\r\n\r\n//Set initial value of totals\r\nfor(var i = 0; i < _count; i++){\r\n    _total[i] = 0.00;\r\n    _grandtotal[i] = 0.00;\r\n}\r\n\r\n//Update total values and grand total values\r\nfunction InitGroup(val){\r\n    for(var i = 0; i < _grandtotal.length; i++){\r\n        \r\n        _total[i] = 0.00;\r\n        _grandtotal[i] = 0.00;\r\n    }\r\n    return val;\r\n}\r\n\r\n//Return total value based on index\r\nfunction GetTotal(index){\r\n    return AddComma(_total[index].toFixed(2));\r\n}\r\n\r\n//Return grand total value based on index\r\nfunction GetGrandTotal(index){\r\n    return AddComma(_grandtotal[index].toFixed(2));\r\n}\r\n\r\n//Updates amount\r\n//Change zero amount to '-'\r\nfunction CheckZero(index, amt){\r\n    _total[index] += parseFloat(amt);\r\n    //  _grandtotal[index] += parseFloat(amt);\r\n    // return parseFloat(amt) > 0 ? AddComma(amt) : amt;\r\n    return parseFloat(amt) > 0 ? amt.toFixed(2) : '-';\r\n}\r\n\r\nfunction CheckZeroForGrandTotal(index, amt){\r\n    _grandtotal[index] += parseFloat(amt);\r\n    return parseFloat(amt) > 0 ? AddComma(amt) : amt;\r\n}\r\n\r\nfunction AddComma(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n function count(lst) {\r\n     return lst.length;\r\n }\r\n\r\n function single(ds, col) {\r\n     if (ds.length === 0) return '';\r\n     return ds[0][col];\r\n }\r\n\r\n function singleDate(ds, col, frmt) {\r\n     var gg = single(ds, col);\r\n     return DateTime.Format(gg, frmt)\r\n }\r\n\r\n function formatDate(dt, frmt) {\r\n     if (dt === null) return '';\r\n     return DateTime.Format(dt, frmt);\r\n }\r\n\r\n function formatNumber(x, decimal) {\r\n     var parts = parseFloat(x).toFixed(decimal || 2).toString().split(\".\");\r\n     parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n     return parts.join(\".\");\r\n }\r\n\r\n function singleNumber(ds, col, decimal) {\r\n     var gg = Single(ds, col);\r\n     return gg == '' ? '-' : formatNumber(gg, decimal);\r\n }\r\n\r\n function concat() {\r\n     var arg = Array.prototype.slice.call(arguments, 0);\r\n     arg.pop();\r\n     return arg.join('');\r\n }\r\n\r\n /**\r\n  * @param by string\r\n  * @param where string\r\n  * @param order string\r\n  * @return { Key , source }\r\n  */\r\n handlebars.registerHelper('group', function(list, options) {\r\n     var ret = '';\r\n\r\n     var hash = options.hash;\r\n     if (!hash || list.length == 0) return inverse(this);\r\n\r\n     var en = Enumerable.From(list);\r\n     if (hash.by) en = en.GroupBy(hash.by);\r\n     if (hash.where) en = en.Where(hash.where);\r\n     if (hash.order) en = en.OrderBy(hash.order);\r\n\r\n     en.ForEach(function(x) {\r\n         ret += options.fn(x);\r\n     });\r\n     return ret;\r\n });\r\n\r\n /**\r\n  * @param where string\r\n  * @param order string\r\n  */\r\n handlebars.registerHelper('forEach', function(list, options) {\r\n     var ret = '';\r\n\r\n     var hash = options.hash;\r\n     if (!hash) return inverse(this);\r\n\r\n     var en = Enumerable.From(list);\r\n     if (hash.where) en = en.Where(hash.where);\r\n     if (hash.order) en = en.OrderBy(hash.order);\r\n\r\n     en.ForEach(function(x) {\r\n         ret += options.fn(x);\r\n     });\r\n     return ret;\r\n });\r\n\r\n /**\r\n  * @param where string\r\n  * @throws when multiple reords found\r\n  */\r\n handlebars.registerHelper('with', function(list, options) {\r\n     var ret = '';\r\n\r\n     var hash = options.hash;\r\n     if (!hash) return inverse(this);\r\n\r\n     var en = Enumerable.From(list);\r\n     if (hash.where) en = en.Where(hash.where);\r\n\r\n     if (en.Any()) {\r\n         ret = options.fn(en.SingleOrDefault());\r\n     }\r\n     return ret;\r\n });\r\n\r\n /*\r\n     do not go here its dangerous\r\n */\r\n var DateTime = (function() {\r\n     return {\r\n         Format: function() {\r\n             var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n                 timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n                 timezoneClip = /[^-+\\dA-Z]/g,\r\n                 pad = function(val, len) {\r\n                     val = String(val);\r\n                     len = len || 2;\r\n                     while (val.length < len) val = \"0\" + val;\r\n                     return val;\r\n                 };\r\n\r\n             // Regexes and supporting functions are cached through closure\r\n             return function(date, mask, utc) {\r\n                 //var dF = DateTime.Format;\r\n                 if (DateTime.IsNewtonFormat(date))\r\n                     date = date.replace('T', ' ');\r\n\r\n                 // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\r\n                 if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\r\n                     mask = date;\r\n                     date = undefined;\r\n                 }\r\n\r\n                 // Passing date through Date applies Date.parse, if necessary\r\n                 date = date ? new Date(date) : new Date;\r\n                 if (isNaN(date)) throw SyntaxError(\"invalid date\");\r\n\r\n                 //mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n                 mask = String(DateTime.masks[mask] || mask || DateTime.masks['default']);\r\n\r\n                 // Allow setting the utc argument via the mask\r\n                 if (mask.slice(0, 4) == \"UTC:\") {\r\n                     mask = mask.slice(4);\r\n                     utc = true;\r\n                 }\r\n\r\n                 var _ = utc ? \"getUTC\" : \"get\",\r\n                     d = date[_ + \"Date\"](),\r\n                     D = date[_ + \"Day\"](),\r\n                     m = date[_ + \"Month\"](),\r\n                     y = date[_ + \"FullYear\"](),\r\n                     H = date[_ + \"Hours\"](),\r\n                     M = date[_ + \"Minutes\"](),\r\n                     s = date[_ + \"Seconds\"](),\r\n                     L = date[_ + \"Milliseconds\"](),\r\n                     o = utc ? 0 : date.getTimezoneOffset(),\r\n                     flags = {\r\n                         d: d,\r\n                         dd: pad(d),\r\n                         ddd: DateTime.i18n.dayNames[D], // dF.i18n.dayNames[D],\r\n                         dddd: DateTime.i18n.dayNames[D + 7],\r\n                         m: m + 1,\r\n                         mm: pad(m + 1),\r\n                         mmm: DateTime.i18n.monthNames[m],\r\n                         mmmm: DateTime.i18n.monthNames[m + 12],\r\n                         yy: String(y).slice(2),\r\n                         yyyy: y,\r\n                         h: H % 12 || 12,\r\n                         hh: pad(H % 12 || 12),\r\n                         H: H,\r\n                         HH: pad(H),\r\n                         M: M,\r\n                         MM: pad(M),\r\n                         s: s,\r\n                         ss: pad(s),\r\n                         l: pad(L, 3),\r\n                         L: pad(L > 99 ? Math.round(L / 10) : L),\r\n                         t: H < 12 ? \"a\" : \"p\",\r\n                         tt: H < 12 ? \"am\" : \"pm\",\r\n                         T: H < 12 ? \"A\" : \"P\",\r\n                         TT: H < 12 ? \"AM\" : \"PM\",\r\n                         Z: utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\r\n                         o: (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                         S: [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n                     };\r\n\r\n                 return mask.replace(token, function($0) {\r\n                     return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n                 });\r\n             };\r\n         }(),\r\n         masks: {\r\n             \"default\": \"ddd mmm dd yyyy HH:MM:ss\",\r\n             shortDate: \"m/d/yy\",\r\n             mediumDate: \"mmm dd, yyyy\",\r\n             longDate: \"mmmm d, yyyy\",\r\n             fullDate: \"dddd, mmmm d, yyyy\",\r\n             shortTime: \"h:MM TT\",\r\n             mediumTime: \"h:MM:ss TT\",\r\n             longTime: \"h:MM:ss TT Z\",\r\n             isoDate: \"yyyy-mm-dd\",\r\n             isoTime: \"HH:MM:ss\",\r\n             isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\r\n             isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\r\n             inSysDateTime: \"hh:MM TT mmm dd, yyyy\",\r\n             sometime: 'hhMMss',\r\n             shortDate2: \"mm/dd/yyyy\",\r\n             jDPInsysDate: \"M dd, yyyy\"\r\n         },\r\n         i18n: {\r\n             dayNames: [\r\n                 \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n                 \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n             ],\r\n             monthNames: [\r\n                 \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n                 \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n             ]\r\n         },\r\n         JSONDate: function(jsonDate, format) {\r\n             //console.log(jsonDate.match(/\\d+/)[0]);\r\n\r\n             var d = new Date(parseInt(jsonDate.substr(6)));\r\n\r\n             return DateTime.Format(d, format);\r\n         },\r\n         ShortDate2: function(dateValue) {\r\n             date = new Date();\r\n\r\n             if (typeof dateValue != 'undefined')\r\n                 date = dateValue;\r\n\r\n             return DateTime.Format(date, DateTime.masks.shortDate2)\r\n         },\r\n         Between: function(sdate, edate, callback, onFinish) {\r\n             try {\r\n                 var i = 0;\r\n                 var d = sdate;\r\n                 while (true) {\r\n                     if (d >= edate) {\r\n                         onFinish();\r\n                         break;\r\n                     } else\r\n                         callback(i, d);\r\n\r\n                     d.setTime(d.getTime() + 86400000);\r\n                     i++;\r\n                 }\r\n             } catch (ex) {\r\n                 console.error('DateTime.Between', ex);\r\n             }\r\n         },\r\n         ToDate: function(jsonDate) {\r\n             return new Date(parseInt(jsonDate.substr(6)));\r\n         },\r\n         IsNewtonFormat: function(dte) {\r\n             return /^(\\d{4})-(\\d{1,2})-(\\d{1,2})T(\\d{1,2}):(\\d{1,2}):(\\d{1,2})?.(\\d{1,3})?$/.test(dte);\r\n             //return /^(\\d{4})-(\\d{1,2})-(\\d{1,2})T(\\d{1,2}):(\\d{1,2}):(\\d{1,2})+(.\\d{3})?$/.test(dte);\r\n         }\r\n     }\r\n }())\r\n\r\n function get(obj, prop) {\r\n     var parts = prop.split('.'),\r\n         last = parts.pop();\r\n\r\n     while ((prop = parts.shift())) {\r\n         obj = obj[prop];\r\n\r\n         if (obj == null) {\r\n             return;\r\n         }\r\n     }\r\n\r\n     return obj[last];\r\n }\r\n\r\n Enumerable = function() {\r\n     var m = \"Single:sequence contains more than one element.\",\r\n         e = true,\r\n         b = null,\r\n         a = false,\r\n         c = function(a) {\r\n             this.GetEnumerator = a\r\n         };\r\n     c.Choice = function() {\r\n         var a = arguments[0] instanceof Array ? arguments[0] : arguments;\r\n         return new c(function() {\r\n             return new f(g.Blank, function() {\r\n                 return this.Yield(a[Math.floor(Math.random() * a.length)])\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.Cycle = function() {\r\n         var a = arguments[0] instanceof Array ? arguments[0] : arguments;\r\n         return new c(function() {\r\n             var b = 0;\r\n             return new f(g.Blank, function() {\r\n                 if (b >= a.length) b = 0;\r\n                 return this.Yield(a[b++])\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.Empty = function() {\r\n         return new c(function() {\r\n             return new f(g.Blank, function() {\r\n                 return a\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.From = function(j) {\r\n         if (j == b) return c.Empty();\r\n         if (j instanceof c) return j;\r\n         if (typeof j == i.Number || typeof j == i.Boolean) return c.Repeat(j, 1);\r\n         if (typeof j == i.String) return new c(function() {\r\n             var b = 0;\r\n             return new f(g.Blank, function() {\r\n                 return b < j.length ? this.Yield(j.charAt(b++)) : a\r\n             }, g.Blank)\r\n         });\r\n         if (typeof j != i.Function) {\r\n             if (typeof j.length == i.Number) return new h(j);\r\n             if (!(j instanceof Object) && d.IsIEnumerable(j)) return new c(function() {\r\n                 var c = e,\r\n                     b;\r\n                 return new f(function() {\r\n                     b = new Enumerator(j)\r\n                 }, function() {\r\n                     if (c) c = a;\r\n                     else b.moveNext();\r\n                     return b.atEnd() ? a : this.Yield(b.item())\r\n                 }, g.Blank)\r\n             })\r\n         }\r\n         return new c(function() {\r\n             var b = [],\r\n                 c = 0;\r\n             return new f(function() {\r\n                 for (var a in j) !(j[a] instanceof Function) && b.push({\r\n                     Key: a,\r\n                     Value: j[a]\r\n                 })\r\n             }, function() {\r\n                 return c < b.length ? this.Yield(b[c++]) : a\r\n             }, g.Blank)\r\n         })\r\n     }, c.Return = function(a) {\r\n         return c.Repeat(a, 1)\r\n     };\r\n     c.Matches = function(h, e, d) {\r\n         if (d == b) d = \"\";\r\n         if (e instanceof RegExp) {\r\n             d += e.ignoreCase ? \"i\" : \"\";\r\n             d += e.multiline ? \"m\" : \"\";\r\n             e = e.source\r\n         }\r\n         if (d.indexOf(\"g\") === -1) d += \"g\";\r\n         return new c(function() {\r\n             var b;\r\n             return new f(function() {\r\n                 b = new RegExp(e, d)\r\n             }, function() {\r\n                 var c = b.exec(h);\r\n                 return c ? this.Yield(c) : a\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.Range = function(e, d, a) {\r\n         if (a == b) a = 1;\r\n         return c.ToInfinity(e, a).Take(d)\r\n     };\r\n     c.RangeDown = function(e, d, a) {\r\n         if (a == b) a = 1;\r\n         return c.ToNegativeInfinity(e, a).Take(d)\r\n     };\r\n     c.RangeTo = function(d, e, a) {\r\n         if (a == b) a = 1;\r\n         return d < e ? c.ToInfinity(d, a).TakeWhile(function(a) {\r\n             return a <= e\r\n         }) : c.ToNegativeInfinity(d, a).TakeWhile(function(a) {\r\n             return a >= e\r\n         })\r\n     };\r\n     c.Repeat = function(d, a) {\r\n         return a != b ? c.Repeat(d).Take(a) : new c(function() {\r\n             return new f(g.Blank, function() {\r\n                 return this.Yield(d)\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.RepeatWithFinalize = function(a, e) {\r\n         a = d.CreateLambda(a);\r\n         e = d.CreateLambda(e);\r\n         return new c(function() {\r\n             var c;\r\n             return new f(function() {\r\n                 c = a()\r\n             }, function() {\r\n                 return this.Yield(c)\r\n             }, function() {\r\n                 if (c != b) {\r\n                     e(c);\r\n                     c = b\r\n                 }\r\n             })\r\n         })\r\n     };\r\n     c.Generate = function(a, e) {\r\n         if (e != b) return c.Generate(a).Take(e);\r\n         a = d.CreateLambda(a);\r\n         return new c(function() {\r\n             return new f(g.Blank, function() {\r\n                 return this.Yield(a())\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.ToInfinity = function(d, a) {\r\n         if (d == b) d = 0;\r\n         if (a == b) a = 1;\r\n         return new c(function() {\r\n             var b;\r\n             return new f(function() {\r\n                 b = d - a\r\n             }, function() {\r\n                 return this.Yield(b += a)\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.ToNegativeInfinity = function(d, a) {\r\n         if (d == b) d = 0;\r\n         if (a == b) a = 1;\r\n         return new c(function() {\r\n             var b;\r\n             return new f(function() {\r\n                 b = d + a\r\n             }, function() {\r\n                 return this.Yield(b -= a)\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.Unfold = function(h, b) {\r\n         b = d.CreateLambda(b);\r\n         return new c(function() {\r\n             var d = e,\r\n                 c;\r\n             return new f(g.Blank, function() {\r\n                 if (d) {\r\n                     d = a;\r\n                     c = h;\r\n                     return this.Yield(c)\r\n                 }\r\n                 c = b(c);\r\n                 return this.Yield(c)\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     c.prototype = {\r\n         CascadeBreadthFirst: function(g, b) {\r\n             var h = this;\r\n             g = d.CreateLambda(g);\r\n             b = d.CreateLambda(b);\r\n             return new c(function() {\r\n                 var i, k = 0,\r\n                     j = [];\r\n                 return new f(function() {\r\n                     i = h.GetEnumerator()\r\n                 }, function() {\r\n                     while (e) {\r\n                         if (i.MoveNext()) {\r\n                             j.push(i.Current());\r\n                             return this.Yield(b(i.Current(), k))\r\n                         }\r\n                         var f = c.From(j).SelectMany(function(a) {\r\n                             return g(a)\r\n                         });\r\n                         if (!f.Any()) return a;\r\n                         else {\r\n                             k++;\r\n                             j = [];\r\n                             d.Dispose(i);\r\n                             i = f.GetEnumerator()\r\n                         }\r\n                     }\r\n                 }, function() {\r\n                     d.Dispose(i)\r\n                 })\r\n             })\r\n         },\r\n         CascadeDepthFirst: function(g, b) {\r\n             var h = this;\r\n             g = d.CreateLambda(g);\r\n             b = d.CreateLambda(b);\r\n             return new c(function() {\r\n                 var j = [],\r\n                     i;\r\n                 return new f(function() {\r\n                     i = h.GetEnumerator()\r\n                 }, function() {\r\n                     while (e) {\r\n                         if (i.MoveNext()) {\r\n                             var f = b(i.Current(), j.length);\r\n                             j.push(i);\r\n                             i = c.From(g(i.Current())).GetEnumerator();\r\n                             return this.Yield(f)\r\n                         }\r\n                         if (j.length <= 0) return a;\r\n                         d.Dispose(i);\r\n                         i = j.pop()\r\n                     }\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(i)\r\n                     } finally {\r\n                         c.From(j).ForEach(function(a) {\r\n                             a.Dispose()\r\n                         })\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Flatten: function() {\r\n             var h = this;\r\n             return new c(function() {\r\n                 var j, i = b;\r\n                 return new f(function() {\r\n                     j = h.GetEnumerator()\r\n                 }, function() {\r\n                     while (e) {\r\n                         if (i != b)\r\n                             if (i.MoveNext()) return this.Yield(i.Current());\r\n                             else i = b;\r\n                         if (j.MoveNext())\r\n                             if (j.Current() instanceof Array) {\r\n                                 d.Dispose(i);\r\n                                 i = c.From(j.Current()).SelectMany(g.Identity).Flatten().GetEnumerator();\r\n                                 continue\r\n                             } else return this.Yield(j.Current());\r\n                         return a\r\n                     }\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(j)\r\n                     } finally {\r\n                         d.Dispose(i)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Pairwise: function(b) {\r\n             var e = this;\r\n             b = d.CreateLambda(b);\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator();\r\n                     c.MoveNext()\r\n                 }, function() {\r\n                     var d = c.Current();\r\n                     return c.MoveNext() ? this.Yield(b(d, c.Current())) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         Scan: function(i, g, j) {\r\n             if (j != b) return this.Scan(i, g).Select(j);\r\n             var h;\r\n             if (g == b) {\r\n                 g = d.CreateLambda(i);\r\n                 h = a\r\n             } else {\r\n                 g = d.CreateLambda(g);\r\n                 h = e\r\n             }\r\n             var k = this;\r\n             return new c(function() {\r\n                 var b, c, j = e;\r\n                 return new f(function() {\r\n                     b = k.GetEnumerator()\r\n                 }, function() {\r\n                     if (j) {\r\n                         j = a;\r\n                         if (!h) {\r\n                             if (b.MoveNext()) return this.Yield(c = b.Current())\r\n                         } else return this.Yield(c = i)\r\n                     }\r\n                     return b.MoveNext() ? this.Yield(c = g(c, b.Current())) : a\r\n                 }, function() {\r\n                     d.Dispose(b)\r\n                 })\r\n             })\r\n         },\r\n         Select: function(b) {\r\n             var e = this;\r\n             b = d.CreateLambda(b);\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     return c.MoveNext() ? this.Yield(b(c.Current(), g++)) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         SelectMany: function(g, e) {\r\n             var h = this;\r\n             g = d.CreateLambda(g);\r\n             if (e == b) e = function(b, a) {\r\n                 return a\r\n             };\r\n             e = d.CreateLambda(e);\r\n             return new c(function() {\r\n                 var j, i = undefined,\r\n                     k = 0;\r\n                 return new f(function() {\r\n                     j = h.GetEnumerator()\r\n                 }, function() {\r\n                     if (i === undefined)\r\n                         if (!j.MoveNext()) return a;\r\n                     do {\r\n                         if (i == b) {\r\n                             var f = g(j.Current(), k++);\r\n                             i = c.From(f).GetEnumerator()\r\n                         }\r\n                         if (i.MoveNext()) return this.Yield(e(j.Current(), i.Current()));\r\n                         d.Dispose(i);\r\n                         i = b\r\n                     } while (j.MoveNext());\r\n                     return a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(j)\r\n                     } finally {\r\n                         d.Dispose(i)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Where: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var e = this;\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     while (c.MoveNext())\r\n                         if (b(c.Current(), g++)) return this.Yield(c.Current());\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         OfType: function(c) {\r\n             var a;\r\n             switch (c) {\r\n                 case Number:\r\n                     a = i.Number;\r\n                     break;\r\n                 case String:\r\n                     a = i.String;\r\n                     break;\r\n                 case Boolean:\r\n                     a = i.Boolean;\r\n                     break;\r\n                 case Function:\r\n                     a = i.Function;\r\n                     break;\r\n                 default:\r\n                     a = b\r\n             }\r\n             return a === b ? this.Where(function(a) {\r\n                 return a instanceof c\r\n             }) : this.Where(function(b) {\r\n                 return typeof b === a\r\n             })\r\n         },\r\n         Zip: function(e, b) {\r\n             b = d.CreateLambda(b);\r\n             var g = this;\r\n             return new c(function() {\r\n                 var i, h, j = 0;\r\n                 return new f(function() {\r\n                     i = g.GetEnumerator();\r\n                     h = c.From(e).GetEnumerator()\r\n                 }, function() {\r\n                     return i.MoveNext() && h.MoveNext() ? this.Yield(b(i.Current(), h.Current(), j++)) : a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(i)\r\n                     } finally {\r\n                         d.Dispose(h)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Join: function(m, i, h, k, j) {\r\n             i = d.CreateLambda(i);\r\n             h = d.CreateLambda(h);\r\n             k = d.CreateLambda(k);\r\n             j = d.CreateLambda(j);\r\n             var l = this;\r\n             return new c(function() {\r\n                 var n, q, o = b,\r\n                     p = 0;\r\n                 return new f(function() {\r\n                     n = l.GetEnumerator();\r\n                     q = c.From(m).ToLookup(h, g.Identity, j)\r\n                 }, function() {\r\n                     while (e) {\r\n                         if (o != b) {\r\n                             var c = o[p++];\r\n                             if (c !== undefined) return this.Yield(k(n.Current(), c));\r\n                             c = b;\r\n                             p = 0\r\n                         }\r\n                         if (n.MoveNext()) {\r\n                             var d = i(n.Current());\r\n                             o = q.Get(d).ToArray()\r\n                         } else return a\r\n                     }\r\n                 }, function() {\r\n                     d.Dispose(n)\r\n                 })\r\n             })\r\n         },\r\n         GroupJoin: function(l, h, e, j, i) {\r\n             h = d.CreateLambda(h);\r\n             e = d.CreateLambda(e);\r\n             j = d.CreateLambda(j);\r\n             i = d.CreateLambda(i);\r\n             var k = this;\r\n             return new c(function() {\r\n                 var m = k.GetEnumerator(),\r\n                     n = b;\r\n                 return new f(function() {\r\n                     m = k.GetEnumerator();\r\n                     n = c.From(l).ToLookup(e, g.Identity, i)\r\n                 }, function() {\r\n                     if (m.MoveNext()) {\r\n                         var b = n.Get(h(m.Current()));\r\n                         return this.Yield(j(m.Current(), b))\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(m)\r\n                 })\r\n             })\r\n         },\r\n         All: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var c = e;\r\n             this.ForEach(function(d) {\r\n                 if (!b(d)) {\r\n                     c = a;\r\n                     return a\r\n                 }\r\n             });\r\n             return c\r\n         },\r\n         Any: function(c) {\r\n             c = d.CreateLambda(c);\r\n             var b = this.GetEnumerator();\r\n             try {\r\n                 if (arguments.length == 0) return b.MoveNext();\r\n                 while (b.MoveNext())\r\n                     if (c(b.Current())) return e;\r\n                 return a\r\n             } finally {\r\n                 d.Dispose(b)\r\n             }\r\n         },\r\n         Concat: function(e) {\r\n             var g = this;\r\n             return new c(function() {\r\n                 var i, h;\r\n                 return new f(function() {\r\n                     i = g.GetEnumerator()\r\n                 }, function() {\r\n                     if (h == b) {\r\n                         if (i.MoveNext()) return this.Yield(i.Current());\r\n                         h = c.From(e).GetEnumerator()\r\n                     }\r\n                     return h.MoveNext() ? this.Yield(h.Current()) : a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(i)\r\n                     } finally {\r\n                         d.Dispose(h)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Insert: function(h, b) {\r\n             var g = this;\r\n             return new c(function() {\r\n                 var j, i, l = 0,\r\n                     k = a;\r\n                 return new f(function() {\r\n                     j = g.GetEnumerator();\r\n                     i = c.From(b).GetEnumerator()\r\n                 }, function() {\r\n                     if (l == h && i.MoveNext()) {\r\n                         k = e;\r\n                         return this.Yield(i.Current())\r\n                     }\r\n                     if (j.MoveNext()) {\r\n                         l++;\r\n                         return this.Yield(j.Current())\r\n                     }\r\n                     return !k && i.MoveNext() ? this.Yield(i.Current()) : a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(j)\r\n                     } finally {\r\n                         d.Dispose(i)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Alternate: function(a) {\r\n             a = c.Return(a);\r\n             return this.SelectMany(function(b) {\r\n                 return c.Return(b).Concat(a)\r\n             }).TakeExceptLast()\r\n         },\r\n         Contains: function(f, b) {\r\n             b = d.CreateLambda(b);\r\n             var c = this.GetEnumerator();\r\n             try {\r\n                 while (c.MoveNext())\r\n                     if (b(c.Current()) === f) return e;\r\n                 return a\r\n             } finally {\r\n                 d.Dispose(c)\r\n             }\r\n         },\r\n         DefaultIfEmpty: function(b) {\r\n             var g = this;\r\n             return new c(function() {\r\n                 var c, h = e;\r\n                 return new f(function() {\r\n                     c = g.GetEnumerator()\r\n                 }, function() {\r\n                     if (c.MoveNext()) {\r\n                         h = a;\r\n                         return this.Yield(c.Current())\r\n                     } else if (h) {\r\n                         h = a;\r\n                         return this.Yield(b)\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         Distinct: function(a) {\r\n             return this.Except(c.Empty(), a)\r\n         },\r\n         Except: function(e, b) {\r\n             b = d.CreateLambda(b);\r\n             var g = this;\r\n             return new c(function() {\r\n                 var h, i;\r\n                 return new f(function() {\r\n                     h = g.GetEnumerator();\r\n                     i = new n(b);\r\n                     c.From(e).ForEach(function(a) {\r\n                         i.Add(a)\r\n                     })\r\n                 }, function() {\r\n                     while (h.MoveNext()) {\r\n                         var b = h.Current();\r\n                         if (!i.Contains(b)) {\r\n                             i.Add(b);\r\n                             return this.Yield(b)\r\n                         }\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(h)\r\n                 })\r\n             })\r\n         },\r\n         Intersect: function(e, b) {\r\n             b = d.CreateLambda(b);\r\n             var g = this;\r\n             return new c(function() {\r\n                 var h, i, j;\r\n                 return new f(function() {\r\n                     h = g.GetEnumerator();\r\n                     i = new n(b);\r\n                     c.From(e).ForEach(function(a) {\r\n                         i.Add(a)\r\n                     });\r\n                     j = new n(b)\r\n                 }, function() {\r\n                     while (h.MoveNext()) {\r\n                         var b = h.Current();\r\n                         if (!j.Contains(b) && i.Contains(b)) {\r\n                             j.Add(b);\r\n                             return this.Yield(b)\r\n                         }\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(h)\r\n                 })\r\n             })\r\n         },\r\n         SequenceEqual: function(h, f) {\r\n             f = d.CreateLambda(f);\r\n             var g = this.GetEnumerator();\r\n             try {\r\n                 var b = c.From(h).GetEnumerator();\r\n                 try {\r\n                     while (g.MoveNext())\r\n                         if (!b.MoveNext() || f(g.Current()) !== f(b.Current())) return a;\r\n                     return b.MoveNext() ? a : e\r\n                 } finally {\r\n                     d.Dispose(b)\r\n                 }\r\n             } finally {\r\n                 d.Dispose(g)\r\n             }\r\n         },\r\n         Union: function(e, b) {\r\n             b = d.CreateLambda(b);\r\n             var g = this;\r\n             return new c(function() {\r\n                 var j, h, i;\r\n                 return new f(function() {\r\n                     j = g.GetEnumerator();\r\n                     i = new n(b)\r\n                 }, function() {\r\n                     var b;\r\n                     if (h === undefined) {\r\n                         while (j.MoveNext()) {\r\n                             b = j.Current();\r\n                             if (!i.Contains(b)) {\r\n                                 i.Add(b);\r\n                                 return this.Yield(b)\r\n                             }\r\n                         }\r\n                         h = c.From(e).GetEnumerator()\r\n                     }\r\n                     while (h.MoveNext()) {\r\n                         b = h.Current();\r\n                         if (!i.Contains(b)) {\r\n                             i.Add(b);\r\n                             return this.Yield(b)\r\n                         }\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(j)\r\n                     } finally {\r\n                         d.Dispose(h)\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         OrderBy: function(b) {\r\n             return new j(this, b, a)\r\n         },\r\n         OrderByDescending: function(a) {\r\n             return new j(this, a, e)\r\n         },\r\n         Reverse: function() {\r\n             var b = this;\r\n             return new c(function() {\r\n                 var c, d;\r\n                 return new f(function() {\r\n                     c = b.ToArray();\r\n                     d = c.length\r\n                 }, function() {\r\n                     return d > 0 ? this.Yield(c[--d]) : a\r\n                 }, g.Blank)\r\n             })\r\n         },\r\n         Shuffle: function() {\r\n             var b = this;\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = b.ToArray()\r\n                 }, function() {\r\n                     if (c.length > 0) {\r\n                         var b = Math.floor(Math.random() * c.length);\r\n                         return this.Yield(c.splice(b, 1)[0])\r\n                     }\r\n                     return a\r\n                 }, g.Blank)\r\n             })\r\n         },\r\n         GroupBy: function(i, h, e, g) {\r\n             var j = this;\r\n             i = d.CreateLambda(i);\r\n             h = d.CreateLambda(h);\r\n             if (e != b) e = d.CreateLambda(e);\r\n             g = d.CreateLambda(g);\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = j.ToLookup(i, h, g).ToEnumerable().GetEnumerator()\r\n                 }, function() {\r\n                     while (c.MoveNext()) return e == b ? this.Yield(c.Current()) : this.Yield(e(c.Current().Key(), c.Current()));\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         PartitionBy: function(j, i, g, h) {\r\n             var l = this;\r\n             j = d.CreateLambda(j);\r\n             i = d.CreateLambda(i);\r\n             h = d.CreateLambda(h);\r\n             var k;\r\n             if (g == b) {\r\n                 k = a;\r\n                 g = function(b, a) {\r\n                     return new o(b, a)\r\n                 }\r\n             } else {\r\n                 k = e;\r\n                 g = d.CreateLambda(g)\r\n             }\r\n             return new c(function() {\r\n                 var b, n, o, m = [];\r\n                 return new f(function() {\r\n                     b = l.GetEnumerator();\r\n                     if (b.MoveNext()) {\r\n                         n = j(b.Current());\r\n                         o = h(n);\r\n                         m.push(i(b.Current()))\r\n                     }\r\n                 }, function() {\r\n                     var d;\r\n                     while ((d = b.MoveNext()) == e)\r\n                         if (o === h(j(b.Current()))) m.push(i(b.Current()));\r\n                         else break;\r\n                     if (m.length > 0) {\r\n                         var f = k ? g(n, c.From(m)) : g(n, m);\r\n                         if (d) {\r\n                             n = j(b.Current());\r\n                             o = h(n);\r\n                             m = [i(b.Current())]\r\n                         } else m = [];\r\n                         return this.Yield(f)\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(b)\r\n                 })\r\n             })\r\n         },\r\n         BufferWithCount: function(e) {\r\n             var b = this;\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = b.GetEnumerator()\r\n                 }, function() {\r\n                     var b = [],\r\n                         d = 0;\r\n                     while (c.MoveNext()) {\r\n                         b.push(c.Current());\r\n                         if (++d >= e) return this.Yield(b)\r\n                     }\r\n                     return b.length > 0 ? this.Yield(b) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         Aggregate: function(c, b, a) {\r\n             return this.Scan(c, b, a).Last()\r\n         },\r\n         Average: function(a) {\r\n             a = d.CreateLambda(a);\r\n             var c = 0,\r\n                 b = 0;\r\n             this.ForEach(function(d) {\r\n                 c += a(d);\r\n                 ++b\r\n             });\r\n             return c / b\r\n         },\r\n         Count: function(a) {\r\n             a = a == b ? g.True : d.CreateLambda(a);\r\n             var c = 0;\r\n             this.ForEach(function(d, b) {\r\n                 if (a(d, b)) ++c\r\n             });\r\n             return c\r\n         },\r\n         Max: function(a) {\r\n             if (a == b) a = g.Identity;\r\n             return this.Select(a).Aggregate(function(a, b) {\r\n                 return a > b ? a : b\r\n             })\r\n         },\r\n         Min: function(a) {\r\n             if (a == b) a = g.Identity;\r\n             return this.Select(a).Aggregate(function(a, b) {\r\n                 return a < b ? a : b\r\n             })\r\n         },\r\n         MaxBy: function(a) {\r\n             a = d.CreateLambda(a);\r\n             return this.Aggregate(function(b, c) {\r\n                 return a(b) > a(c) ? b : c\r\n             })\r\n         },\r\n         MinBy: function(a) {\r\n             a = d.CreateLambda(a);\r\n             return this.Aggregate(function(b, c) {\r\n                 return a(b) < a(c) ? b : c\r\n             })\r\n         },\r\n         Sum: function(a) {\r\n             if (a == b) a = g.Identity;\r\n             return this.Select(a).Aggregate(0, function(a, b) {\r\n                 return a + b\r\n             })\r\n         },\r\n         ElementAt: function(d) {\r\n             var c, b = a;\r\n             this.ForEach(function(g, f) {\r\n                 if (f == d) {\r\n                     c = g;\r\n                     b = e;\r\n                     return a\r\n                 }\r\n             });\r\n             if (!b) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n             return c\r\n         },\r\n         ElementAtOrDefault: function(f, d) {\r\n             var c, b = a;\r\n             this.ForEach(function(g, d) {\r\n                 if (d == f) {\r\n                     c = g;\r\n                     b = e;\r\n                     return a\r\n                 }\r\n             });\r\n             return !b ? d : c\r\n         },\r\n         First: function(c) {\r\n             if (c != b) return this.Where(c).First();\r\n             var f, d = a;\r\n             this.ForEach(function(b) {\r\n                 f = b;\r\n                 d = e;\r\n                 return a\r\n             });\r\n             if (!d) throw new Error(\"First:No element satisfies the condition.\");\r\n             return f\r\n         },\r\n         FirstOrDefault: function(c, d) {\r\n             if (d != b) return this.Where(d).FirstOrDefault(c);\r\n             var g, f = a;\r\n             this.ForEach(function(b) {\r\n                 g = b;\r\n                 f = e;\r\n                 return a\r\n             });\r\n             return !f ? c : g\r\n         },\r\n         Last: function(c) {\r\n             if (c != b) return this.Where(c).Last();\r\n             var f, d = a;\r\n             this.ForEach(function(a) {\r\n                 d = e;\r\n                 f = a\r\n             });\r\n             if (!d) throw new Error(\"Last:No element satisfies the condition.\");\r\n             return f\r\n         },\r\n         LastOrDefault: function(c, d) {\r\n             if (d != b) return this.Where(d).LastOrDefault(c);\r\n             var g, f = a;\r\n             this.ForEach(function(a) {\r\n                 f = e;\r\n                 g = a\r\n             });\r\n             return !f ? c : g\r\n         },\r\n         Single: function(d) {\r\n             if (d != b) return this.Where(d).Single();\r\n             var f, c = a;\r\n             this.ForEach(function(a) {\r\n                 if (!c) {\r\n                     c = e;\r\n                     f = a\r\n                 } else throw new Error(m);\r\n             });\r\n             if (!c) throw new Error(\"Single:No element satisfies the condition.\");\r\n             return f\r\n         },\r\n         SingleOrDefault: function(d, f) {\r\n             if (f != b) return this.Where(f).SingleOrDefault(d);\r\n             var g, c = a;\r\n             this.ForEach(function(a) {\r\n                 if (!c) {\r\n                     c = e;\r\n                     g = a\r\n                 } else throw new Error(m);\r\n             });\r\n             return !c ? d : g\r\n         },\r\n         Skip: function(e) {\r\n             var b = this;\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = b.GetEnumerator();\r\n                     while (g++ < e && c.MoveNext());\r\n                 }, function() {\r\n                     return c.MoveNext() ? this.Yield(c.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         SkipWhile: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var g = this;\r\n             return new c(function() {\r\n                 var c, i = 0,\r\n                     h = a;\r\n                 return new f(function() {\r\n                     c = g.GetEnumerator()\r\n                 }, function() {\r\n                     while (!h)\r\n                         if (c.MoveNext()) {\r\n                             if (!b(c.Current(), i++)) {\r\n                                 h = e;\r\n                                 return this.Yield(c.Current())\r\n                             }\r\n                             continue\r\n                         } else return a;\r\n                     return c.MoveNext() ? this.Yield(c.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         Take: function(e) {\r\n             var b = this;\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = b.GetEnumerator()\r\n                 }, function() {\r\n                     return g++ < e && c.MoveNext() ? this.Yield(c.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         TakeWhile: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var e = this;\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     return c.MoveNext() && b(c.Current(), g++) ? this.Yield(c.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         TakeExceptLast: function(e) {\r\n             if (e == b) e = 1;\r\n             var g = this;\r\n             return new c(function() {\r\n                 if (e <= 0) return g.GetEnumerator();\r\n                 var b, c = [];\r\n                 return new f(function() {\r\n                     b = g.GetEnumerator()\r\n                 }, function() {\r\n                     while (b.MoveNext()) {\r\n                         if (c.length == e) {\r\n                             c.push(b.Current());\r\n                             return this.Yield(c.shift())\r\n                         }\r\n                         c.push(b.Current())\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(b)\r\n                 })\r\n             })\r\n         },\r\n         TakeFromLast: function(e) {\r\n             if (e <= 0 || e == b) return c.Empty();\r\n             var g = this;\r\n             return new c(function() {\r\n                 var j, h, i = [];\r\n                 return new f(function() {\r\n                     j = g.GetEnumerator()\r\n                 }, function() {\r\n                     while (j.MoveNext()) {\r\n                         i.length == e && i.shift();\r\n                         i.push(j.Current())\r\n                     }\r\n                     if (h == b) h = c.From(i).GetEnumerator();\r\n                     return h.MoveNext() ? this.Yield(h.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(h)\r\n                 })\r\n             })\r\n         },\r\n         IndexOf: function(c) {\r\n             var a = b;\r\n             this.ForEach(function(d, b) {\r\n                 if (d === c) {\r\n                     a = b;\r\n                     return e\r\n                 }\r\n             });\r\n             return a !== b ? a : -1\r\n         },\r\n         LastIndexOf: function(b) {\r\n             var a = -1;\r\n             this.ForEach(function(d, c) {\r\n                 if (d === b) a = c\r\n             });\r\n             return a\r\n         },\r\n         ToArray: function() {\r\n             var a = [];\r\n             this.ForEach(function(b) {\r\n                 a.push(b)\r\n             });\r\n             return a\r\n         },\r\n         ToLookup: function(c, b, a) {\r\n             c = d.CreateLambda(c);\r\n             b = d.CreateLambda(b);\r\n             a = d.CreateLambda(a);\r\n             var e = new n(a);\r\n             this.ForEach(function(g) {\r\n                 var f = c(g),\r\n                     a = b(g),\r\n                     d = e.Get(f);\r\n                 if (d !== undefined) d.push(a);\r\n                 else e.Add(f, [a])\r\n             });\r\n             return new q(e)\r\n         },\r\n         ToObject: function(b, a) {\r\n             b = d.CreateLambda(b);\r\n             a = d.CreateLambda(a);\r\n             var c = {};\r\n             this.ForEach(function(d) {\r\n                 c[b(d)] = a(d)\r\n             });\r\n             return c\r\n         },\r\n         ToDictionary: function(c, b, a) {\r\n             c = d.CreateLambda(c);\r\n             b = d.CreateLambda(b);\r\n             a = d.CreateLambda(a);\r\n             var e = new n(a);\r\n             this.ForEach(function(a) {\r\n                 e.Add(c(a), b(a))\r\n             });\r\n             return e\r\n         },\r\n         ToJSON: function(a, b) {\r\n             return JSON.stringify(this.ToArray(), a, b)\r\n         },\r\n         ToString: function(a, c) {\r\n             if (a == b) a = \"\";\r\n             if (c == b) c = g.Identity;\r\n             return this.Select(c).ToArray().join(a)\r\n         },\r\n         Do: function(b) {\r\n             var e = this;\r\n             b = d.CreateLambda(b);\r\n             return new c(function() {\r\n                 var c, g = 0;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     if (c.MoveNext()) {\r\n                         b(c.Current(), g++);\r\n                         return this.Yield(c.Current())\r\n                     }\r\n                     return a\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         ForEach: function(c) {\r\n             c = d.CreateLambda(c);\r\n             var e = 0,\r\n                 b = this.GetEnumerator();\r\n             try {\r\n                 while (b.MoveNext())\r\n                     if (c(b.Current(), e++) === a) break\r\n             } finally {\r\n                 d.Dispose(b)\r\n             }\r\n         },\r\n         Write: function(c, f) {\r\n             if (c == b) c = \"\";\r\n             f = d.CreateLambda(f);\r\n             var g = e;\r\n             this.ForEach(function(b) {\r\n                 if (g) g = a;\r\n                 else document.write(c);\r\n                 document.write(f(b))\r\n             })\r\n         },\r\n         WriteLine: function(a) {\r\n             a = d.CreateLambda(a);\r\n             this.ForEach(function(b) {\r\n                 document.write(a(b));\r\n                 document.write(\"<br />\")\r\n             })\r\n         },\r\n         Force: function() {\r\n             var a = this.GetEnumerator();\r\n             try {\r\n                 while (a.MoveNext());\r\n             } finally {\r\n                 d.Dispose(a)\r\n             }\r\n         },\r\n         Let: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var e = this;\r\n             return new c(function() {\r\n                 var g;\r\n                 return new f(function() {\r\n                     g = c.From(b(e)).GetEnumerator()\r\n                 }, function() {\r\n                     return g.MoveNext() ? this.Yield(g.Current()) : a\r\n                 }, function() {\r\n                     d.Dispose(g)\r\n                 })\r\n             })\r\n         },\r\n         Share: function() {\r\n             var e = this,\r\n                 d;\r\n             return new c(function() {\r\n                 return new f(function() {\r\n                     if (d == b) d = e.GetEnumerator()\r\n                 }, function() {\r\n                     return d.MoveNext() ? this.Yield(d.Current()) : a\r\n                 }, g.Blank)\r\n             })\r\n         },\r\n         MemoizeAll: function() {\r\n             var h = this,\r\n                 e, d;\r\n             return new c(function() {\r\n                 var c = -1;\r\n                 return new f(function() {\r\n                     if (d == b) {\r\n                         d = h.GetEnumerator();\r\n                         e = []\r\n                     }\r\n                 }, function() {\r\n                     c++;\r\n                     return e.length <= c ? d.MoveNext() ? this.Yield(e[c] = d.Current()) : a : this.Yield(e[c])\r\n                 }, g.Blank)\r\n             })\r\n         },\r\n         Catch: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var e = this;\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     try {\r\n                         return c.MoveNext() ? this.Yield(c.Current()) : a\r\n                     } catch (d) {\r\n                         b(d);\r\n                         return a\r\n                     }\r\n                 }, function() {\r\n                     d.Dispose(c)\r\n                 })\r\n             })\r\n         },\r\n         Finally: function(b) {\r\n             b = d.CreateLambda(b);\r\n             var e = this;\r\n             return new c(function() {\r\n                 var c;\r\n                 return new f(function() {\r\n                     c = e.GetEnumerator()\r\n                 }, function() {\r\n                     return c.MoveNext() ? this.Yield(c.Current()) : a\r\n                 }, function() {\r\n                     try {\r\n                         d.Dispose(c)\r\n                     } finally {\r\n                         b()\r\n                     }\r\n                 })\r\n             })\r\n         },\r\n         Trace: function(c, a) {\r\n             if (c == b) c = \"Trace\";\r\n             a = d.CreateLambda(a);\r\n             return this.Do(function(b) {\r\n                 console.log(c, \":\", a(b))\r\n             })\r\n         }\r\n     };\r\n     var g = {\r\n             Identity: function(a) {\r\n                 return a\r\n             },\r\n             True: function() {\r\n                 return e\r\n             },\r\n             Blank: function() {}\r\n         },\r\n         i = {\r\n             Boolean: typeof e,\r\n             Number: typeof 0,\r\n             String: typeof \"\",\r\n             Object: typeof {},\r\n             Undefined: typeof undefined,\r\n             Function: typeof\r\n             function() {}\r\n         },\r\n         d = {\r\n             CreateLambda: function(a) {\r\n                 if (a == b) return g.Identity;\r\n                 if (typeof a == i.String)\r\n                     if (a == \"\") return g.Identity;\r\n                     else if (a.indexOf(\"=>\") == -1) return new Function(\"$,$$,$$$,$$$$\", \"return \" + a);\r\n                 else {\r\n                     var c = a.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n                     return new Function(c[1], \"return \" + c[2])\r\n                 }\r\n                 return a\r\n             },\r\n             IsIEnumerable: function(b) {\r\n                 if (typeof Enumerator != i.Undefined) try {\r\n                     new Enumerator(b);\r\n                     return e\r\n                 } catch (c) {}\r\n                 return a\r\n             },\r\n             Compare: function(a, b) {\r\n                 return a === b ? 0 : a > b ? 1 : -1\r\n             },\r\n             Dispose: function(a) {\r\n                 a != b && a.Dispose()\r\n             }\r\n         },\r\n         k = {\r\n             Before: 0,\r\n             Running: 1,\r\n             After: 2\r\n         },\r\n         f = function(d, f, g) {\r\n             var c = new p,\r\n                 b = k.Before;\r\n             this.Current = c.Current;\r\n             this.MoveNext = function() {\r\n                 try {\r\n                     switch (b) {\r\n                         case k.Before:\r\n                             b = k.Running;\r\n                             d();\r\n                         case k.Running:\r\n                             if (f.apply(c)) return e;\r\n                             else {\r\n                                 this.Dispose();\r\n                                 return a\r\n                             }\r\n                         case k.After:\r\n                             return a\r\n                     }\r\n                 } catch (g) {\r\n                     this.Dispose();\r\n                     throw g;\r\n                 }\r\n             };\r\n             this.Dispose = function() {\r\n                 if (b != k.Running) return;\r\n                 try {\r\n                     g()\r\n                 } finally {\r\n                     b = k.After\r\n                 }\r\n             }\r\n         },\r\n         p = function() {\r\n             var a = b;\r\n             this.Current = function() {\r\n                 return a\r\n             };\r\n             this.Yield = function(b) {\r\n                 a = b;\r\n                 return e\r\n             }\r\n         },\r\n         j = function(f, b, c, e) {\r\n             var a = this;\r\n             a.source = f;\r\n             a.keySelector = d.CreateLambda(b);\r\n             a.descending = c;\r\n             a.parent = e\r\n         };\r\n     j.prototype = new c;\r\n     j.prototype.CreateOrderedEnumerable = function(a, b) {\r\n         return new j(this.source, a, b, this)\r\n     };\r\n     j.prototype.ThenBy = function(b) {\r\n         return this.CreateOrderedEnumerable(b, a)\r\n     };\r\n     j.prototype.ThenByDescending = function(a) {\r\n         return this.CreateOrderedEnumerable(a, e)\r\n     };\r\n     j.prototype.GetEnumerator = function() {\r\n         var h = this,\r\n             d, c, e = 0;\r\n         return new f(function() {\r\n             d = [];\r\n             c = [];\r\n             h.source.ForEach(function(b, a) {\r\n                 d.push(b);\r\n                 c.push(a)\r\n             });\r\n             var a = l.Create(h, b);\r\n             a.GenerateKeys(d);\r\n             c.sort(function(b, c) {\r\n                 return a.Compare(b, c)\r\n             })\r\n         }, function() {\r\n             return e < c.length ? this.Yield(d[c[e++]]) : a\r\n         }, g.Blank)\r\n     };\r\n     var l = function(c, d, e) {\r\n         var a = this;\r\n         a.keySelector = c;\r\n         a.descending = d;\r\n         a.child = e;\r\n         a.keys = b\r\n     };\r\n     l.Create = function(a, d) {\r\n         var c = new l(a.keySelector, a.descending, d);\r\n         return a.parent != b ? l.Create(a.parent, c) : c\r\n     };\r\n     l.prototype.GenerateKeys = function(d) {\r\n         var a = this;\r\n         for (var f = d.length, g = a.keySelector, e = new Array(f), c = 0; c < f; c++) e[c] = g(d[c]);\r\n         a.keys = e;\r\n         a.child != b && a.child.GenerateKeys(d)\r\n     };\r\n     l.prototype.Compare = function(e, f) {\r\n         var a = this,\r\n             c = d.Compare(a.keys[e], a.keys[f]);\r\n         if (c == 0) {\r\n             if (a.child != b) return a.child.Compare(e, f);\r\n             c = d.Compare(e, f)\r\n         }\r\n         return a.descending ? -c : c\r\n     };\r\n     var h = function(a) {\r\n         this.source = a\r\n     };\r\n     h.prototype = new c;\r\n     h.prototype.Any = function(a) {\r\n         return a == b ? this.source.length > 0 : c.prototype.Any.apply(this, arguments)\r\n     };\r\n     h.prototype.Count = function(a) {\r\n         return a == b ? this.source.length : c.prototype.Count.apply(this, arguments)\r\n     };\r\n     h.prototype.ElementAt = function(a) {\r\n         return 0 <= a && a < this.source.length ? this.source[a] : c.prototype.ElementAt.apply(this, arguments)\r\n     };\r\n     h.prototype.ElementAtOrDefault = function(a, b) {\r\n         return 0 <= a && a < this.source.length ? this.source[a] : b\r\n     };\r\n     h.prototype.First = function(a) {\r\n         return a == b && this.source.length > 0 ? this.source[0] : c.prototype.First.apply(this, arguments)\r\n     };\r\n     h.prototype.FirstOrDefault = function(a, d) {\r\n         return d != b ? c.prototype.FirstOrDefault.apply(this, arguments) : this.source.length > 0 ? this.source[0] : a\r\n     };\r\n     h.prototype.Last = function(d) {\r\n         var a = this;\r\n         return d == b && a.source.length > 0 ? a.source[a.source.length - 1] : c.prototype.Last.apply(a, arguments)\r\n     };\r\n     h.prototype.LastOrDefault = function(d, e) {\r\n         var a = this;\r\n         return e != b ? c.prototype.LastOrDefault.apply(a, arguments) : a.source.length > 0 ? a.source[a.source.length - 1] : d\r\n     };\r\n     h.prototype.Skip = function(d) {\r\n         var b = this.source;\r\n         return new c(function() {\r\n             var c;\r\n             return new f(function() {\r\n                 c = d < 0 ? 0 : d\r\n             }, function() {\r\n                 return c < b.length ? this.Yield(b[c++]) : a\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     h.prototype.TakeExceptLast = function(a) {\r\n         if (a == b) a = 1;\r\n         return this.Take(this.source.length - a)\r\n     };\r\n     h.prototype.TakeFromLast = function(a) {\r\n         return this.Skip(this.source.length - a)\r\n     };\r\n     h.prototype.Reverse = function() {\r\n         var b = this.source;\r\n         return new c(function() {\r\n             var c;\r\n             return new f(function() {\r\n                 c = b.length\r\n             }, function() {\r\n                 return c > 0 ? this.Yield(b[--c]) : a\r\n             }, g.Blank)\r\n         })\r\n     };\r\n     h.prototype.SequenceEqual = function(d, e) {\r\n         return (d instanceof h || d instanceof Array) && e == b && c.From(d).Count() != this.Count() ? a : c.prototype.SequenceEqual.apply(this, arguments)\r\n     };\r\n     h.prototype.ToString = function(a, d) {\r\n         if (d != b || !(this.source instanceof Array)) return c.prototype.ToString.apply(this, arguments);\r\n         if (a == b) a = \"\";\r\n         return this.source.join(a)\r\n     };\r\n     h.prototype.GetEnumerator = function() {\r\n         var b = this.source,\r\n             c = 0;\r\n         return new f(g.Blank, function() {\r\n             return c < b.length ? this.Yield(b[c++]) : a\r\n         }, g.Blank)\r\n     };\r\n     var n = function() {\r\n             var h = function(a, b) {\r\n                     return Object.prototype.hasOwnProperty.call(a, b)\r\n                 },\r\n                 d = function(a) {\r\n                     return a === b ? \"null\" : a === undefined ? \"undefined\" : typeof a.toString === i.Function ? a.toString() : Object.prototype.toString.call(a)\r\n                 },\r\n                 l = function(d, c) {\r\n                     var a = this;\r\n                     a.Key = d;\r\n                     a.Value = c;\r\n                     a.Prev = b;\r\n                     a.Next = b\r\n                 },\r\n                 j = function() {\r\n                     this.First = b;\r\n                     this.Last = b\r\n                 };\r\n             j.prototype = {\r\n                 AddLast: function(c) {\r\n                     var a = this;\r\n                     if (a.Last != b) {\r\n                         a.Last.Next = c;\r\n                         c.Prev = a.Last;\r\n                         a.Last = c\r\n                     } else a.First = a.Last = c\r\n                 },\r\n                 Replace: function(c, a) {\r\n                     if (c.Prev != b) {\r\n                         c.Prev.Next = a;\r\n                         a.Prev = c.Prev\r\n                     } else this.First = a;\r\n                     if (c.Next != b) {\r\n                         c.Next.Prev = a;\r\n                         a.Next = c.Next\r\n                     } else this.Last = a\r\n                 },\r\n                 Remove: function(a) {\r\n                     if (a.Prev != b) a.Prev.Next = a.Next;\r\n                     else this.First = a.Next;\r\n                     if (a.Next != b) a.Next.Prev = a.Prev;\r\n                     else this.Last = a.Prev\r\n                 }\r\n             };\r\n             var k = function(c) {\r\n                 var a = this;\r\n                 a.count = 0;\r\n                 a.entryList = new j;\r\n                 a.buckets = {};\r\n                 a.compareSelector = c == b ? g.Identity : c\r\n             };\r\n             k.prototype = {\r\n                 Add: function(i, j) {\r\n                     var a = this,\r\n                         g = a.compareSelector(i),\r\n                         f = d(g),\r\n                         c = new l(i, j);\r\n                     if (h(a.buckets, f)) {\r\n                         for (var b = a.buckets[f], e = 0; e < b.length; e++)\r\n                             if (a.compareSelector(b[e].Key) === g) {\r\n                                 a.entryList.Replace(b[e], c);\r\n                                 b[e] = c;\r\n                                 return\r\n                             }\r\n                         b.push(c)\r\n                     } else a.buckets[f] = [c];\r\n                     a.count++;\r\n                     a.entryList.AddLast(c)\r\n                 },\r\n                 Get: function(i) {\r\n                     var a = this,\r\n                         c = a.compareSelector(i),\r\n                         g = d(c);\r\n                     if (!h(a.buckets, g)) return undefined;\r\n                     for (var e = a.buckets[g], b = 0; b < e.length; b++) {\r\n                         var f = e[b];\r\n                         if (a.compareSelector(f.Key) === c) return f.Value\r\n                     }\r\n                     return undefined\r\n                 },\r\n                 Set: function(k, m) {\r\n                     var b = this,\r\n                         g = b.compareSelector(k),\r\n                         j = d(g);\r\n                     if (h(b.buckets, j))\r\n                         for (var f = b.buckets[j], c = 0; c < f.length; c++)\r\n                             if (b.compareSelector(f[c].Key) === g) {\r\n                                 var i = new l(k, m);\r\n                                 b.entryList.Replace(f[c], i);\r\n                                 f[c] = i;\r\n                                 return e\r\n                             }\r\n                     return a\r\n                 },\r\n                 Contains: function(j) {\r\n                     var b = this,\r\n                         f = b.compareSelector(j),\r\n                         i = d(f);\r\n                     if (!h(b.buckets, i)) return a;\r\n                     for (var g = b.buckets[i], c = 0; c < g.length; c++)\r\n                         if (b.compareSelector(g[c].Key) === f) return e;\r\n                     return a\r\n                 },\r\n                 Clear: function() {\r\n                     this.count = 0;\r\n                     this.buckets = {};\r\n                     this.entryList = new j\r\n                 },\r\n                 Remove: function(g) {\r\n                     var a = this,\r\n                         f = a.compareSelector(g),\r\n                         e = d(f);\r\n                     if (!h(a.buckets, e)) return;\r\n                     for (var b = a.buckets[e], c = 0; c < b.length; c++)\r\n                         if (a.compareSelector(b[c].Key) === f) {\r\n                             a.entryList.Remove(b[c]);\r\n                             b.splice(c, 1);\r\n                             if (b.length == 0) delete a.buckets[e];\r\n                             a.count--;\r\n                             return\r\n                         }\r\n                 },\r\n                 Count: function() {\r\n                     return this.count\r\n                 },\r\n                 ToEnumerable: function() {\r\n                     var d = this;\r\n                     return new c(function() {\r\n                         var c;\r\n                         return new f(function() {\r\n                             c = d.entryList.First\r\n                         }, function() {\r\n                             if (c != b) {\r\n                                 var d = {\r\n                                     Key: c.Key,\r\n                                     Value: c.Value\r\n                                 };\r\n                                 c = c.Next;\r\n                                 return this.Yield(d)\r\n                             }\r\n                             return a\r\n                         }, g.Blank)\r\n                     })\r\n                 }\r\n             };\r\n             return k\r\n         }(),\r\n         q = function(a) {\r\n             var b = this;\r\n             b.Count = function() {\r\n                 return a.Count()\r\n             };\r\n             b.Get = function(b) {\r\n                 return c.From(a.Get(b))\r\n             };\r\n             b.Contains = function(b) {\r\n                 return a.Contains(b)\r\n             };\r\n             b.ToEnumerable = function() {\r\n                 return a.ToEnumerable().Select(function(a) {\r\n                     return new o(a.Key, a.Value)\r\n                 })\r\n             }\r\n         },\r\n         o = function(b, a) {\r\n             this.Key = function() {\r\n                 return b\r\n             };\r\n             h.call(this, a)\r\n         };\r\n     o.prototype = new h;\r\n     return c\r\n }()"}